buildscript {
	repositories {
		// These repositories are only for Gradle plugins, put any other repositories in the repository block further below
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://repo.spongepowered.org/maven' }
		mavenCentral()
		maven { url = 'https://maven.parchmentmc.org' }
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
		classpath 'org.parchmentmc:librarian:1.+'
	}
}

apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = '1.0.1'
group = 'io._3650.itemupgrader_content'
archivesBaseName = 'itemupgrader'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
	mappings channel: 'parchment', version: '2022.11.27-1.19.2'

	runs {
		client {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'itemupgrader_content'

			mods {
				itemupgrader_content {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'itemupgrader_content'

			mods {
				itemupgrader_content {
					source sourceSets.main
				}
			}
		}

		gameTestServer {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'itemupgrader_content'

			mods {
				itemupgrader_content {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			args '--mod', 'itemupgrader_content', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				itemupgrader_content {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {
		url 'https://cursemaven.com'
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	flatDir {
		dir 'modfiles'
	}
}

dependencies {
	minecraft 'net.minecraftforge:forge:1.19.2-43.2.0'
	
	//Item Upgrader Core (Uncomment when all references have been safely contained)
	//Compile against api
	compileOnly fg.deobf("itemupgrader:itemupgrader-core:1.0.1:api")
	//Use full core for runtime
	runtimeOnly fg.deobf('itemupgrader:itemupgrader-core:1.0.1')
	
	//bring in appleskin because I need food value feedback
	runtimeOnly fg.deobf("curse.maven:appleskin-248787:3872808")
	//configured, catalogue, and better mods button to help stop my config nightmares
	runtimeOnly fg.deobf("curse.maven:configured-457570:4011355")
	runtimeOnly fg.deobf("curse.maven:catalogue-459701:3873264")
	runtimeOnly fg.deobf("curse.maven:better-mods-button-541584:3963202")
	//QOL mods because i am an impatient being who is spending 50% of my time developing this on a non-gaming laptop (and the other 50% on a gaming pc)
	runtimeOnly fg.deobf("curse.maven:rubidium-574856:3973894")
	runtimeOnly fg.deobf("curse.maven:lazy-dfu-forge-460819:3831644")
	runtimeOnly fg.deobf("curse.maven:smooth-boot-reloaded-633412:4162940")
	runtimeOnly fg.deobf("curse.maven:mouse-tweaks-60089:3871353")
	
	// compile against the JEI API but do not include it at runtime
	compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
	compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))
	// at runtime, use the full JEI jar for Forge
	runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))
	
	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
	add sourceSets.main, 'itemupgrader_content.refmap.json'
	config 'itemupgrader_content.mixins.json'
	
	debug.verbose = true
	debug.export = true
	dumpTargetOnFailure = true
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : "itemupgrader_content",
				"Specification-Vendor"    : "LegoMaster3650",
				"Specification-Version"   : "1", // We are version 1 of ourselves
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : project.jar.archiveVersion,
				"Implementation-Vendor"   : "LegoMaster3650",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				"MixinConfigs": "itemupgrader_content.mixins.json"
		])
	}
}

jar.finalizedBy('reobfJar')

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId project.archivesBaseName
			
			artifact jar
		}
	}
	repositories {
		if (project.hasProperty('mavenUrl') && project.hasProperty('mavenUser') && project.hasProperty('mavenPass')) {
			maven {
				url mavenUrl
				credentials {
					username mavenUser
					password mavenPass
				}
			}
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}
